## Символьные литералы
Литерал - это константное значение, записанное прямо в исходном коде программы. 
Он представляет собой фиксированное значение определенного типа данных. 
Литералы используются для представления чисел, символов, строк и других типов данных в программе.
     Язык C++ поддерживает несколько типов символьных литералов:
    Символьные литералы типа char:
Односимвольные литералы заключаются в одинарные кавычки, например 'a', 'b', 'c'.
Также поддерживаются специальные управляющие последовательности, такие как '\n' (новая строка), '\t' (табуляция), '\' '(обратный слеш) и т. д.
    Символьные литералы типа wchar_t:
Для широких символов используются символы L перед одиночными кавычками, например L'a', L'b', L'c'.
Также поддерживаются управляющие последовательности с префиксом L, например L'\n', L'\t', L'\'' и т. д.
    Символьные литералы типа char16_t и char32_t:
Для символов Unicode 16-битного и 32-битного формата соответственно, используются префиксы u и U перед одиночными кавычками, 
например u'a', U'b', u'c', U'x03A6' (греческая буква "фи" в шестнадцатеричном формате).
    Символьные литералы типа bool:
Поддерживается два символьных литерала: true и false, которые представляют логические значения истинности и ложности соответственно.

## Строковые литералы
const char* str1 = "Hello, world!"; // Объявление строки типа const char*
const wchar_t* str2 = L"Привет, мир!"; // Объявление широкой строки типа const wchar_t*
const char16_t* str3 = u"Hello, world!"; // Объявление строки Unicode 16-битного формата
const char32_t* str4 = U"Hello, world!"; // Объявление строки Unicode 32-битного формата

char emptyString[] = ""; // Пустая строка с использованием массива символов
const char* emptyString = ""; // Пустая строка с использованием указателя на const char
std::string emptyString; // Пустая строка с использованием объекта класса std::string

Строковые литералы - это последовательности символов, заключенные в двойные кавычки (")"
 в языке C++. Они используются для представления строковых значений в программе.
Строковые литералы полезны во множестве ситуаций. Некоторые основные применения строковых литералов включают:
    Вывод на консоль: Строковые литералы могут быть использованы для вывода текста на консоль или другие устройства вывода.
    Присваивание значения переменной: Строковые литералы могут быть непосредственно присвоены значениям переменных типа std::string или символьных массивов (char[]).
    Конкатенация строк: Строковые литералы могут быть объединены с помощью оператора +, чтобы создать новую строку, которая содержит содержимое обоих литералов.
    Передача в функции: Строковые литералы могут быть переданы в функции в качестве аргументов.
Теперь рассмотрим сырые строковые литералы. 
Сырые строковые литералы введены в C++11 и позволяют задавать строки, в которых специальные символы, такие как обратные слеши и 
кавычки, не будут интерпретироваться.
Сырые строковые литералы записываются с использованием префикса R перед открывающей кавычкой строки. 
За открывающей кавычкой следует символ (, который указывает начало сырого строкового литерала. 
Затем вы пишете саму строку и закрывающая кавычка ) указывает конец литерала.
#include <iostream>
int main() {
    std::cout << R"(C:\Windows\System32\)";
    return 0;
}